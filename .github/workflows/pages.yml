# .github/workflows/pages.yml
name: CI & Deploy to Cloudflare Pages

# ────────────────────────────────
# Triggers
#   • Production deploys on pushes to main
#   • Preview environments on pull‑requests to main
# ────────────────────────────────
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 30 # fail‑fast safety

    # Abort superseded runs (e.g. force‑pushes)
    concurrency:
      group: pages-${{ github.head_ref || github.ref }}
      cancel-in-progress: true

    # Minimal permissions for secure deployments
    permissions:
      contents: read
      deployments: write

    steps:
      # ——— Check out repo —————————————————————————————————————
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      # ——— Toolchain setup ————————————————————————————————
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 # active LTS

      - name: 🔧 Enable Corepack
        run: corepack enable

      # ——— Install, test, lint ——————————————————————————————
      - name: 📥 Install dependencies
        run: yarn install --frozen-lockfile

      - name: 🧹 Lint
        run: yarn lint

      # If you have tests, uncomment the block below
      # - name: 🧪 Test
      #   run: yarn test --if-present

      # ——— Build Astro for Pages ————————————————————————————
      - name: 🏗️ Build site
        run: yarn build # runs `astro build` → ./dist

      # ——— Deploy with Wrangler CLI directly ————————————————
      - name: 🚀 Deploy to Cloudflare Pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          # Clear any potential wrangler cache
          rm -rf node_modules/.cache/wrangler/pages.json || true
          
          # Determine branch name
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BRANCH="pr-${{ github.event.pull_request.number }}"
          else
            BRANCH="${{ github.ref_name }}"
          fi
          
          echo "Deploying to branch: $BRANCH"
          
          # Deploy to Cloudflare Pages
          npx wrangler@latest pages deploy dist --project-name=personal-website --branch="$BRANCH" --commit-dirty=true
