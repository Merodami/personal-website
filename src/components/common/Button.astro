---
interface Props {
  href?: string;
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
  external?: boolean;
}

const {
  href,
  variant = 'primary',
  size = 'md',
  class: className = '',
  external = false,
} = Astro.props;

const variantClasses = {
  primary:
    'bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white shadow-lg hover:shadow-xl',
  secondary: 'bg-gray-700 hover:bg-gray-600 text-white',
  outline: 'border border-gray-700 text-gray-300 hover:bg-gray-800/50 hover:border-gray-600',
};

const sizeClasses = {
  sm: 'px-4 py-2 text-sm',
  md: 'px-6 py-3 text-base',
  lg: 'px-8 py-4 text-lg',
};

const classes = `
  inline-flex items-center justify-center font-medium rounded-lg
  transition-all duration-200 transform hover:scale-[1.02]
  focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2
  ${variantClasses[variant]}
  ${sizeClasses[size]}
  ${className}
`;

const Component = href ? 'a' : 'button';
const externalProps = external ? { target: '_blank', rel: 'noopener noreferrer' } : {};
---

<Component href={href} class={classes} {...externalProps}>
  <slot />
</Component>
