---
interface Props {
  class?: string;
  hover?: boolean;
}

const { class: className = '', hover = true } = Astro.props;

const classes = `
  card
  ${hover ? 'card-hover' : ''}
  ${className}
`;
---

<div class={classes}>
  <slot />
</div>

<style>
  .card {
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: 12px;
    padding: 1.5rem;
    position: relative;
    overflow: hidden;
  }

  /* Light theme improvements */
  :global([data-theme='light']) .card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px) saturate(120%);
    border: 1px solid rgba(139, 92, 246, 0.1);
    box-shadow:
      0 4px 16px -4px rgba(139, 92, 246, 0.08),
      0 2px 8px -2px rgba(236, 72, 153, 0.03);
  }

  /* Dark theme enhancements */
  :global([data-theme='dark']) .card {
    background: rgba(20, 20, 20, 0.5);
    backdrop-filter: blur(20px) saturate(180%);
    border: 1px solid rgba(255, 255, 255, 0.05);
  }

  .card-hover {
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .card-hover::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(
      135deg,
      transparent 0%,
      rgba(217, 70, 239, 0.05) 50%,
      rgba(236, 72, 153, 0.05) 100%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .card-hover:hover {
    transform: translateY(-2px);
    border-color: var(--color-border-hover);
    box-shadow: var(--shadow-lg);
  }

  .card-hover:hover::before {
    opacity: 1;
  }
</style>
