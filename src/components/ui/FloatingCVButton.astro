---
import { useAstroI18n } from '@/i18n';

const { lang, i18n } = useAstroI18n(Astro.url);
const cvPath = lang === 'es' ? '/cv/Damian_Meroni_CV_ES_I.pdf' : '/cv/Damian_Meroni_CV_EN_I.pdf';
---

<a
  href={cvPath}
  download
  class="floating-cv-button"
  data-cv-download-floating
  aria-label={i18n.t('experience.downloadCV')}
  title={i18n.t('experience.downloadCV')}
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    class="floating-cv-icon"
    fill="none"
    viewBox="0 0 24 24"
    stroke="currentColor"
    stroke-width="2"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
    ></path>
  </svg>
  <span class="floating-cv-text" data-i18n="experience.downloadCV"
    >{i18n.t('experience.downloadCV')}</span
  >
  <div class="pulse-ring"></div>
</a>

<style>
  .floating-cv-button {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 60px;
    height: 60px;
    padding: 0;
    background: var(--color-primary);
    color: var(--color-background);
    border-radius: 50%;
    text-decoration: none;
    font-weight: 500;
    font-size: 0.875rem;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
    z-index: 40;
    opacity: 0;
    transform: translateY(100px);
    transition: all 0.3s ease;
    overflow: hidden;
  }

  .floating-cv-button.visible {
    opacity: 1;
    transform: translateY(0);
  }

  .floating-cv-button:hover {
    transform: translateY(-3px);
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4);
    width: auto;
    padding: 1rem 1.5rem;
    border-radius: 2rem;
  }

  .floating-cv-icon {
    width: 1.5rem;
    height: 1.5rem;
    flex-shrink: 0;
  }

  .floating-cv-text {
    max-width: 0;
    opacity: 0;
    white-space: nowrap;
    transition: all 0.3s ease;
    overflow: hidden;
  }

  .floating-cv-button:hover .floating-cv-text {
    max-width: 150px;
    opacity: 1;
    margin-left: 0.25rem;
  }

  .pulse-ring {
    position: absolute;
    inset: -10px;
    border: 2px solid var(--color-primary);
    border-radius: 50%;
    opacity: 0.5;
    animation: pulse 2s infinite;
    pointer-events: none;
  }

  @keyframes pulse {
    0% {
      transform: scale(1);
      opacity: 0.5;
    }
    100% {
      transform: scale(1.3);
      opacity: 0;
    }
  }

  @media (max-width: 640px) {
    .floating-cv-button {
      bottom: 1.5rem;
      right: 1.5rem;
      width: 56px;
      height: 56px;
    }

    .floating-cv-icon {
      width: 1.25rem;
      height: 1.25rem;
    }

    .floating-cv-button:hover {
      width: 56px;
      height: 56px;
      padding: 0;
      border-radius: 50%;
    }

    .floating-cv-text {
      display: none;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const floatingButton = document.querySelector('.floating-cv-button');
    if (!floatingButton) return;

    let hasScrolled = false;

    const handleScroll = () => {
      const scrollY = window.scrollY;
      const heroHeight = window.innerHeight * 0.8;

      if (scrollY > heroHeight && !hasScrolled) {
        hasScrolled = true;
        floatingButton.classList.add('visible');
      } else if (scrollY <= heroHeight && hasScrolled) {
        hasScrolled = false;
        floatingButton.classList.remove('visible');
      }
    };

    window.addEventListener('scroll', handleScroll, { passive: true });
    handleScroll(); // Check initial state
  });
</script>
