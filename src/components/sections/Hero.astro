---
import Button from '@components/common/Button.astro';
import FloatingTechLogos from '@components/background/FloatingTechLogos.astro';
import StaticTechLogos from '@components/background/StaticTechLogos.astro';
import DynamicText from '@components/ui/DynamicText.astro';
import { FEATURE_FLAGS } from '@config/constants';
import { useAstroI18n, getLocalizedUrl } from '@/i18n';

const { lang, i18n } = useAstroI18n(Astro.url);

// Dynamic words with colors matching technology brands
const dynamicWords = [
  { text: i18n.t('hero.dynamicWords.build'), color: '#3178C6' }, // TypeScript blue
  { text: i18n.t('hero.dynamicWords.create'), color: '#61DAFB' }, // React cyan
  { text: i18n.t('hero.dynamicWords.develop'), color: '#339933' }, // Node.js green
  { text: i18n.t('hero.dynamicWords.engineer'), color: '#F7DF1E' }, // JavaScript yellow
  { text: i18n.t('hero.dynamicWords.craft'), color: '#DD0031' }, // Angular red
  { text: i18n.t('hero.dynamicWords.architect'), color: '#2496ED' }, // Docker blue
  { text: i18n.t('hero.dynamicWords.code'), color: '#FF9900' }, // AWS orange
  { text: i18n.t('hero.dynamicWords.forge'), color: '#4169E1' }, // PostgreSQL blue
  { text: i18n.t('hero.dynamicWords.shape'), color: '#47A248' }, // MongoDB green
];
---

<section class={`hero-section ${lang === 'es' ? 'lang-es' : ''}`}>
  <FloatingTechLogos />
  <StaticTechLogos />
  <div class="hero-gradient"></div>

  <div class="container">
    <div class="hero-content">
      <h1 class="hero-title">
        <span data-i18n="hero.title.part1">{i18n.t('hero.title.part1')}</span>
        <DynamicText words={dynamicWords} className="data-i18n-dynamic-words" /><br />
        <span class="gradient-text" data-i18n="hero.title.part2">{i18n.t('hero.title.part2')}</span>
        <span data-i18n="hero.title.part3">{i18n.t('hero.title.part3')}</span>
      </h1>

      <p class="hero-description" data-i18n="hero.description">
        {i18n.t('hero.description')}
      </p>

      <div class="hero-actions">
        {
          FEATURE_FLAGS.showProjects && (
            <Button href={getLocalizedUrl('/projects', lang)} size="lg">
              <span data-i18n="common.viewMyWork">{i18n.t('common.viewMyWork')}</span>
            </Button>
          )
        }
        <Button href={getLocalizedUrl('/contact', lang)} variant="outline" size="lg">
          <span data-i18n="common.getInTouch">{i18n.t('common.getInTouch')}</span>
        </Button>
      </div>
    </div>
  </div>
</section>

<style>
  .hero-section {
    position: relative;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    padding: 4rem 0;
  }

  .hero-gradient {
    position: absolute;
    inset: 0;
    background:
      radial-gradient(circle at 20% 50%, rgba(217, 70, 239, 0.15) 0%, transparent 50%),
      radial-gradient(circle at 80% 50%, rgba(236, 72, 153, 0.15) 0%, transparent 50%),
      radial-gradient(circle at 50% 50%, rgba(168, 85, 247, 0.05) 0%, transparent 70%);
    z-index: 2;
    pointer-events: none;
  }

  .hero-content {
    max-width: 900px;
    margin: 0 auto;
    text-align: center;
    position: relative;
    z-index: 3;
  }

  .hero-title {
    font-size: clamp(2.5rem, 5vw, 4.5rem);
    font-weight: 700;
    line-height: 1.1;
    letter-spacing: -0.02em;
    margin-bottom: 1.5rem;
    opacity: 0;
    animation: fade-up 0.8s ease-out forwards;
  }

  .gradient-text {
    background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-accent) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .hero-description {
    font-size: 1.125rem;
    line-height: 1.7;
    color: var(--color-text-secondary);
    max-width: 600px;
    margin: 0 auto 2rem;
    opacity: 0;
    animation: fade-up 0.8s ease-out 0.2s forwards;
  }

  .hero-actions {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
    opacity: 0;
    animation: fade-up 0.8s ease-out 0.4s forwards;
  }

  @keyframes fade-up {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @media (min-width: 768px) {
    .hero-title {
      margin-bottom: 2rem;
    }

    .hero-description {
      font-size: 1.25rem;
      margin-bottom: 3rem;
    }
  }

  /* Language-specific adjustments */
  .hero-section.lang-es {
    padding-top: 6rem;
  }

  .lang-es .hero-title {
    margin-bottom: 1.75rem;
  }

  @media (min-width: 768px) {
    .lang-es .hero-title {
      margin-bottom: 2.25rem;
    }
  }
</style>
