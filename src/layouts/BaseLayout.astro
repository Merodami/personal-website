---
export const prerender = true;

import '../styles/global.css';
import Header from '../components/layout/Header.astro';
import Footer from '../components/layout/Footer.astro';
import SEOTags from '../components/seo/SEOTags.astro';
import StateInspector from '../components/dev/StateInspector.astro';
import { themeInitScript } from '../scripts/theme-init';

interface Props {
  title?: string;
  description?: string;
  image?: string;
  noindex?: boolean;
}

const { title, description, image, noindex } = Astro.props;
---

<!doctype html>
<html lang="en" class="h-full" data-theme="dark">
  <head>
    <SEOTags {title} {description} {image} {noindex} />

    <!-- Preconnect to font provider -->
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

    <!-- Theme initialization (before body to prevent flash) -->
    <script is:inline set:html={themeInitScript} />
  </head>
  <body class="h-full">
    <Header />
    <main class="main-content">
      <slot />
    </main>
    <Footer />

    <!-- Development-only state inspector -->
    <StateInspector />

    <script>
      // Intersection Observer for scroll animations
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px',
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animate');
            observer.unobserve(entry.target);
          }
        });
      }, observerOptions);

      // Observe all elements with animate-on-scroll class
      document.addEventListener('DOMContentLoaded', () => {
        const elements = document.querySelectorAll('.animate-on-scroll');
        elements.forEach((el) => observer.observe(el));
      });
    </script>
  </body>
</html>

<style>
  .main-content {
    min-height: 100vh;
  }
</style>
